// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/risks": {
            "get": {
                "description": "get Risks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Risks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/risk.Risk"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Risk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Risk",
                "parameters": [
                    {
                        "description": "Risk Data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/risk.RiskBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/risk.Risk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/risks/{id}": {
            "get": {
                "description": "Get Risk By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Risk By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Risk ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/risk.Risk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "risk.Risk": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "x-order": "0",
                    "example": "add736b0-516b-401c-a4ee-bfa00812bb52"
                },
                "state": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/risk.State"
                        }
                    ],
                    "x-order": "1",
                    "example": "investigating"
                },
                "title": {
                    "type": "string",
                    "x-order": "2",
                    "example": "CVE-2022-29217"
                },
                "description": {
                    "type": "string",
                    "x-order": "3",
                    "example": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats."
                }
            }
        },
        "risk.RiskBody": {
            "type": "object",
            "required": [
                "state"
            ],
            "properties": {
                "state": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/risk.State"
                        }
                    ],
                    "x-order": "1",
                    "example": "investigating"
                },
                "title": {
                    "type": "string",
                    "x-order": "2",
                    "example": "CVE-2022-29217"
                },
                "description": {
                    "type": "string",
                    "x-order": "3",
                    "example": "python-jose through 3.3.0 has algorithm confusion with OpenSSH ECDSA keys and other key formats."
                }
            }
        },
        "risk.State": {
            "type": "string",
            "enum": [
                "open",
                "closed",
                "accepted",
                "investigating"
            ],
            "x-enum-varnames": [
                "Open",
                "Closed",
                "Accepted",
                "Investigating"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Risks API",
	Description:      "Risks REST API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
